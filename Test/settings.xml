<TestConfiguration>
  <Load
    usr_operator_path="./usr_operators.dll"
    usr_class_path="C:/Work/Replicode/Test/V1.2/user.classes.replicode"
    source_file_name="C:/Work/Replicode/Test/V1.2/main.replicode"
  />
  <Init
    base_period="50000"
    reduction_core_count="6"
    time_core_count="2"
  />
  <System
    mdl_inertia_sr_thr="0.9"
    mdl_inertia_cnt_thr="6"
    tpx_dsr_thr="0.1"
    min_sim_time_horizon="25000"
    max_sim_time_horizon="100000"
    sim_time_horizon="0.3"
    tpx_time_horizon="500000"
    perf_sampling_period="250000"
    float_tolerance="0.00001"
    time_tolerance="10000"
    primary_thz="3600000"
    secondary_thz="7200000"
  />
  <Debug debug="yes">
    <Resilience
      ntf_mk_resilience="1"
      goal_pred_success_resilience="1000"
    />
  </Debug>
  <Run
    run_time="2080"
    probe_level="2"
    decompile_image="yes"
    ignore_named_objects="yes"
    write_image="no"
    image_path="../Test/test.replicode.image"
    test_image="no"
  />
</TestConfiguration>

<!--Usage
Init
  base_period: in us.
  reduction_core_count: number of threads processing reduction jobs.
  time_core_count: number of thread processing update jobs.
System
  mdl_inertia_sr_thr: in [0,1].
  mdl_inertia_cnt_thr: in instance count.
  tpx_dsr_thr: in [0,1].
  min_sim_time_horizon: in us.
  max_sim_time_horizon: in us.
  sim_time_horizon: in [0,1]: percentage of (before-now) allocated to simulation.
  tpx_time_horizon: in us.
  perf_sampling_prd: in us.
  float_tolerance: in [0,1].
  time_tolerance: in us.
  primary_thz: time after which states/models that did not match are pushed down to secondary group (models) or sent to oblivion (states); in seconds.
  secondary_thz: time after which states/models that did not match are sent to oblivion; in seconds.
Debug
  ntf_mk_resilience: in upr (i.e. relative to the ntf group).
  goal_pred_success_resilience: in upr (i.e. relative to the ntf group).
Run
  run_time: in ms.
  probe_level: any probe set to a level >= this level will not be executed. 0 means no probe will be executed.
  decompile_image: yes or no.
  write_image: yes or no.
  test_image: yes or no (yes: reads back and decompiles).
-->
