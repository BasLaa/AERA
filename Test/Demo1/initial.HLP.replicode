; initial high-level patterns (HLP).
; abstraction is fully automatic: HLPs are built from examples.
; the provided examples will die at the first upr.

; utilities.

a_cube:(ent 1) |[]


; a self hand position.

f_self_right_hand_is_a_hand:(fact self_right_hand_is_a_hand 0us 1 1) |[]

f_self_right_hand_belongs_to_self:(fact self_right_hand_belongs_to_self 0us 1 1) |[]

self_right_hand_pos:(mk.val self_right_hand position (vec3 0 0 0) 1) |[]
f_self_right_hand_pos:(fact self_right_hand_pos 0us 1 1) |[]

self_hand_position:(cst [f_self_right_hand_is_a_hand f_self_right_hand_belongs_to_self f_self_right_hand_pos] [stdin] 0us 1) [[SYNC_FRONT now 0 forever stdin nil 1]]


; move a self hand -> update a self hand position.

cmd_move:(cmd move_hand [self_right_hand (vec3 0 0 0) 0us] 1) |[]
f_cmd_move:(fact cmd_move 0us 1 1) |[]

a_self_hand_pos:(icst self_hand_position [self_right_hand (vec3 0 0 0) 0us] 1) |[]
f_a_self_hand_pos:(fact a_self_hand_pos 0us 1 1) |[]

move_hand:(mdl [f_cmd_move f_a_self_hand_pos] [stdin] 0us 1) [[SYNC_FRONT now 0 forever stdin nil 1]]

























